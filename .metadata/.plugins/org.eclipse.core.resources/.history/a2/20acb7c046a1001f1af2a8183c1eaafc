package threadpool;

import java.io.*;
import java.util.*;
import java.nio.charset.MalformedInputException;
import java.nio.file.*;
import java.util.concurrent.*;

public class ThreadpoolWordCount {
    private final Map<String, Integer> wordCounts = new ConcurrentHashMap<>();

    public static void main(String[] args) {
        ThreadpoolWordCount wc = new ThreadpoolWordCount();
        wc.countWords();
    }

    private void countWords() {
        int availableCores = Runtime.getRuntime().availableProcessors();
        ExecutorService executor = Executors.newFixedThreadPool(availableCores);

        try {
            Files.walk(Paths.get("C:\\Users\\Devyanii\\Desktop\\JAVA\\A8\\Assignment8\\Assignment8"))
                 .filter(Files::isRegularFile)
                 .forEach(file -> executor.submit(() -> processFile(file)));
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            executor.shutdown();
            try {
                executor.awaitTermination(1, TimeUnit.HOURS);
            } catch (InterruptedException e) {
                Thread.currentThread().interrupt();
            }
        }
    }

    private void processFile(Path file) {
        try (BufferedReader reader = Files.newBufferedReader(file)) {
            String line;
            while ((line = reader.readLine()) != null) {
                if (line.trim().isEmpty()) 
                	continue;
                String[] words = line.toLowerCase().replaceAll("[^a-z ]", "").split("\\s+");
                for (String word : words) {
                    wordCounts.merge(word, 1, Integer::sum);
                }
            }
        }catch (MalformedInputException e) {
            
         } 
        
        catch (IOException e) {
            e.printStackTrace();
        }
    }
}
